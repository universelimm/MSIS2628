linrongyu@Lins-MacBook-Pro public % docker build -t my_django .

Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
linrongyu@Lins-MacBook-Pro public % docker network create mynetwork

Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
linrongyu@Lins-MacBook-Pro public % ls
Dockerfile              db                      requirements.txt
app                     dba
linrongyu@Lins-MacBook-Pro public % docker network create mynetwork

Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
linrongyu@Lins-MacBook-Pro public % docker network create mynetwork

Error response from daemon: network with name mynetwork already exists
linrongyu@Lins-MacBook-Pro public % cd db
linrongyu@Lins-MacBook-Pro db % docker build -t my_db .

[+] Building 1.6s (5/5) FINISHED                                                   
 => [internal] load build definition from Dockerfile                          0.0s
 => => transferring dockerfile: 151B                                          0.0s
 => [internal] load .dockerignore                                             0.0s
 => => transferring context: 2B                                               0.0s
 => [internal] load metadata for docker.io/library/postgres:12.12             1.5s
 => CACHED [1/1] FROM docker.io/library/postgres:12.12@sha256:48e7749d34781a  0.0s
 => exporting to image                                                        0.0s
 => => exporting layers                                                       0.0s
 => => writing image sha256:d83703eaa76cc0d679d61f1d44b0f7fee005436c59d6e040  0.0s
 => => naming to docker.io/library/my_db                                      0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
linrongyu@Lins-MacBook-Pro db % docker run --name mydb --network mynetwork -p 5432:5432 -d my_db

docker: Error response from daemon: Conflict. The container name "/mydb" is already in use by container "278b6b433fd6e09f63cd0ae3902bd9c446e32514646c9919f15449d588a5fc29". You have to remove (or rename) that container to be able to reuse that name.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro db % docker run --name mydb --network mynetwork -p 5432:5432 -d my_db

c9a8a245d7f5e738a337ca77fb7c8353b436d66fa4dc61d95497b808a799acc9
linrongyu@Lins-MacBook-Pro db % cd ../dba
linrongyu@Lins-MacBook-Pro dba % docker build -t my_dba .
[+] Building 1.3s (5/5) FINISHED                                                   
 => [internal] load build definition from Dockerfile                          0.0s
 => => transferring dockerfile: 154B                                          0.0s
 => [internal] load .dockerignore                                             0.0s
 => => transferring context: 2B                                               0.0s
 => [internal] load metadata for docker.io/dpage/pgadmin4:6.14                1.2s
 => CACHED [1/1] FROM docker.io/dpage/pgadmin4:6.14@sha256:2b3d238866dfcd999  0.0s
 => exporting to image                                                        0.0s
 => => exporting layers                                                       0.0s
 => => writing image sha256:e8c8024e78f9139984318957f5b9566f5fc341a12a206a0f  0.0s
 => => naming to docker.io/library/my_dba                                     0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
linrongyu@Lins-MacBook-Pro dba % docker run --name mydba --network mynetwork -p 8081:80 -d my_dba

65e2a73fe31c4b9d9f7d5524847348ae44a7b80541cab1f8c05d8565b2dc5f7d
linrongyu@Lins-MacBook-Pro dba % cd ..
linrongyu@Lins-MacBook-Pro public % docker build -t my_django .

[+] Building 0.1s (2/2) FINISHED                                                   
 => [internal] load build definition from Dockerfile                          0.0s
 => => transferring dockerfile: 36B                                           0.0s
 => [internal] load .dockerignore                                             0.0s
 => => transferring context: 2B                                               0.0s
failed to solve with frontend dockerfile.v0: failed to create LLB definition: the Dockerfile cannot be empty
linrongyu@Lins-MacBook-Pro public % ls
Dockerfile              db                      requirements.txt
app                     dba
linrongyu@Lins-MacBook-Pro public % docker build -t my_django .
[+] Building 0.1s (2/2) FINISHED                                                   
 => [internal] load build definition from Dockerfile                          0.0s
 => => transferring dockerfile: 34B                                           0.0s
 => [internal] load .dockerignore                                             0.0s
 => => transferring context: 2B                                               0.0s
failed to solve with frontend dockerfile.v0: failed to create LLB definition: the Dockerfile cannot be empty
linrongyu@Lins-MacBook-Pro public % docker build -t my_django .

[+] Building 0.1s (2/2) FINISHED                                                   
 => [internal] load build definition from Dockerfile                          0.0s
 => => transferring dockerfile: 34B                                           0.0s
 => [internal] load .dockerignore                                             0.0s
 => => transferring context: 2B                                               0.0s
failed to solve with frontend dockerfile.v0: failed to create LLB definition: the Dockerfile cannot be empty
linrongyu@Lins-MacBook-Pro public % ls
Dockerfile              db                      requirements.txt
app                     dba
linrongyu@Lins-MacBook-Pro public % docker build -t my_django .

[+] Building 10.8s (9/9) FINISHED                                                  
 => [internal] load build definition from Dockerfile                          0.0s
 => => transferring dockerfile: 163B                                          0.0s
 => [internal] load .dockerignore                                             0.0s
 => => transferring context: 2B                                               0.0s
 => [internal] load metadata for docker.io/library/python:latest              1.1s
 => CACHED [1/4] FROM docker.io/library/python@sha256:fe068d8c06a719e26a1388  0.0s
 => [internal] load build context                                             0.0s
 => => transferring context: 59B                                              0.0s
 => [2/4] WORKDIR /app                                                        0.0s
 => [3/4] COPY requirements.txt /tmp/                                         0.0s
 => [4/4] RUN pip3 install -r /tmp/requirements.txt                           8.9s
 => exporting to image                                                        0.5s
 => => exporting layers                                                       0.5s
 => => writing image sha256:598c967551d472f35411cd0a69fa5a3047409a769bdd3bcf  0.0s
 => => naming to docker.io/library/my_django                                  0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v $(pwd):/app my_django /bin/bash

docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v $(pwd):/app my_django /bin/bash

docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v $(pwd):/app my_django /bin/bash
docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v $(pwd):/app my_django /bin/bash
docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 --network mynetwork -v $(pwd)/mysite:/app my_django /bin/bash

docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 --network mynetwork -v $(pwd)/app:/app my_django /bin/bash
docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 --network mynetwork -v $(pwd)/app:/app my_django /bin/bash
docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 --network mynetwork -v $(pwd)/app:/app my_django /bin/bash
docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v $(pwd):/mysite my_django /bin/bash
docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v $(pwd):/app my_django /bin/bash
docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v $(pwd):/app my_django /bin/bash
docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v $(pwd):/app my_django /bin/bash
docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v $(pwd):/app my_django /bin/bashdocker run -it -p8000:8000 -v  my_django /bin/bash
docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v  my_django /bin/bash
docker: invalid reference format.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000
"docker run" requires at least 1 argument.
See 'docker run --help'.

Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

Run a command in a new container
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000  my_django /bin/bash 
root@7658fab8bd67:/app# exit
exit
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v "$(pwd):/app" my_django /bin/bash
root@52be94b5719d:/app# django-admin startproject mysite
CommandError: '/app/mysite' already exists
root@52be94b5719d:/app# exit
exit
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 --network mynetwork -v $(pwd)/mysite:/app my_django /bin/bash
docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 --network mynetwork -v ”$(pwd)/mysite:/app“ my_django /bin/bash
docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 --network mynetwork -v ”$(pwd)/app:/mysite“ my_django /bin/bash
docker: invalid reference format: repository name must be lowercase.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 --network mynetwork -v "$(pwd)/app:/mysite" my_django /bin/bash
root@ff1a89070f10:/app# python manage.py migrate
python: can't open file '/app/manage.py': [Errno 2] No such file or directory
root@ff1a89070f10:/app# ls
root@ff1a89070f10:/app# exit
exit
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v '$(pwd):/app' my_django /bin/bash
docker: Error response from daemon: create $(pwd): "$(pwd)" includes invalid characters for a local volume name, only "[a-zA-Z0-9][a-zA-Z0-9_.-]" are allowed. If you intended to pass a host directory, use absolute path.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v '$(pwd):/app' my_django /bin/bash
docker: Error response from daemon: create $(pwd): "$(pwd)" includes invalid characters for a local volume name, only "[a-zA-Z0-9][a-zA-Z0-9_.-]" are allowed. If you intended to pass a host directory, use absolute path.
See 'docker run --help'.
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 -v "$(pwd):/app" my_django /bin/bash
root@e81682092121:/app# django-admin startproject mysite
CommandError: '/app/mysite' already exists
root@e81682092121:/app# django-admin startproject mysite2
root@e81682092121:/app# django-admin startproject mysite
root@e81682092121:/app# exit
exit
linrongyu@Lins-MacBook-Pro public % docker run -it -p8000:8000 --network mynetwork -v "$(pwd)/mysite:/app" my_django /bin/bash
root@27df2d50736c:/app# cd ..
root@27df2d50736c:/# ls
app  boot  etc   lib    mnt  proc  run   srv  tmp  var
bin  dev   home  media  opt  root  sbin  sys  usr
root@27df2d50736c:/# cd app
root@27df2d50736c:/app# ls
manage.py  mysite
root@27df2d50736c:/app# python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying sessions.0001_initial... OK
root@27df2d50736c:/app# python manage.py createsuperuser
Username (leave blank to use 'root'): root
Email address: a@a.com
Password: 
Password (again): 
Error: Your passwords didn't match.
Password: 
Password (again): 
This password is too short. It must contain at least 8 characters.
This password is too common.
Bypass password validation and create user anyway? [y/N]: N
Password: 
Password (again): 
This password is too short. It must contain at least 8 characters.
This password is too common.
Bypass password validation and create user anyway? [y/N]: N       
Password: 
Password (again): 
This password is too common.
Bypass password validation and create user anyway? [y/N]: N
Password: 
Password (again): 
Superuser created successfully.
root@27df2d50736c:/app# python manage.py migrate
Traceback (most recent call last):
  File "/app/manage.py", line 22, in <module>
    main()
  File "/app/manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py", line 446, in execute_from_command_line
    utility.execute()
  File "/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py", line 386, in execute
    settings.INSTALLED_APPS
  File "/usr/local/lib/python3.10/site-packages/django/conf/__init__.py", line 92, in __getattr__
    self._setup(name)
  File "/usr/local/lib/python3.10/site-packages/django/conf/__init__.py", line 79, in _setup
    self._wrapped = Settings(settings_module)
  File "/usr/local/lib/python3.10/site-packages/django/conf/__init__.py", line 190, in __init__
    mod = importlib.import_module(self.SETTINGS_MODULE)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 879, in exec_module
  File "<frozen importlib._bootstrap_external>", line 1017, in get_code
  File "<frozen importlib._bootstrap_external>", line 947, in source_to_code
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/mysite/settings.py", line 76
    DATABASES = {
IndentationError: unexpected indent
root@27df2d50736c:/app# python manage.py migrate
Traceback (most recent call last):
  File "/app/manage.py", line 22, in <module>
    main()
  File "/app/manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py", line 446, in execute_from_command_line
    utility.execute()
  File "/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py", line 386, in execute
    settings.INSTALLED_APPS
  File "/usr/local/lib/python3.10/site-packages/django/conf/__init__.py", line 92, in __getattr__
    self._setup(name)
  File "/usr/local/lib/python3.10/site-packages/django/conf/__init__.py", line 79, in _setup
    self._wrapped = Settings(settings_module)
  File "/usr/local/lib/python3.10/site-packages/django/conf/__init__.py", line 190, in __init__
    mod = importlib.import_module(self.SETTINGS_MODULE)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 879, in exec_module
  File "<frozen importlib._bootstrap_external>", line 1017, in get_code
  File "<frozen importlib._bootstrap_external>", line 947, in source_to_code
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/mysite/settings.py", line 76
    DATABASES = {
IndentationError: unexpected indent
root@27df2d50736c:/app# python manage.py migrate
Traceback (most recent call last):
  File "/app/manage.py", line 22, in <module>
    main()
  File "/app/manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py", line 446, in execute_from_command_line
    utility.execute()
  File "/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py", line 386, in execute
    settings.INSTALLED_APPS
  File "/usr/local/lib/python3.10/site-packages/django/conf/__init__.py", line 92, in __getattr__
    self._setup(name)
  File "/usr/local/lib/python3.10/site-packages/django/conf/__init__.py", line 79, in _setup
    self._wrapped = Settings(settings_module)
  File "/usr/local/lib/python3.10/site-packages/django/conf/__init__.py", line 190, in __init__
    mod = importlib.import_module(self.SETTINGS_MODULE)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 879, in exec_module
  File "<frozen importlib._bootstrap_external>", line 1017, in get_code
  File "<frozen importlib._bootstrap_external>", line 947, in source_to_code
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/mysite/settings.py", line 76
    DATABASES = {
IndentationError: unexpected indent
root@27df2d50736c:/app# python manage.py migrate
Traceback (most recent call last):
  File "/app/manage.py", line 22, in <module>
    main()
  File "/app/manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py", line 446, in execute_from_command_line
    utility.execute()
  File "/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py", line 386, in execute
    settings.INSTALLED_APPS
  File "/usr/local/lib/python3.10/site-packages/django/conf/__init__.py", line 92, in __getattr__
    self._setup(name)
  File "/usr/local/lib/python3.10/site-packages/django/conf/__init__.py", line 79, in _setup
    self._wrapped = Settings(settings_module)
  File "/usr/local/lib/python3.10/site-packages/django/conf/__init__.py", line 190, in __init__
    mod = importlib.import_module(self.SETTINGS_MODULE)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 879, in exec_module
  File "<frozen importlib._bootstrap_external>", line 1017, in get_code
  File "<frozen importlib._bootstrap_external>", line 947, in source_to_code
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/mysite/settings.py", line 76
    DATABASES = {
IndentationError: unexpected indent
root@27df2d50736c:/app# python manage.py migrate
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 282, in ensure_connection
    self.connect()
  File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 263, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 215, in get_new_connection
    connection = Database.connect(**conn_params)
  File "/usr/local/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  password authentication failed for user "root"


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/app/manage.py", line 22, in <module>
    main()
  File "/app/manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py", line 446, in execute_from_command_line
    utility.execute()
  File "/usr/local/lib/python3.10/site-packages/django/core/management/__init__.py", line 440, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/usr/local/lib/python3.10/site-packages/django/core/management/base.py", line 402, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/usr/local/lib/python3.10/site-packages/django/core/management/base.py", line 448, in execute
    output = self.handle(*args, **options)
  File "/usr/local/lib/python3.10/site-packages/django/core/management/base.py", line 96, in wrapped
    res = handle_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/core/management/commands/migrate.py", line 114, in handle
    executor = MigrationExecutor(connection, self.migration_progress_callback)
  File "/usr/local/lib/python3.10/site-packages/django/db/migrations/executor.py", line 18, in __init__
    self.loader = MigrationLoader(self.connection)
  File "/usr/local/lib/python3.10/site-packages/django/db/migrations/loader.py", line 58, in __init__
    self.build_graph()
  File "/usr/local/lib/python3.10/site-packages/django/db/migrations/loader.py", line 235, in build_graph
    self.applied_migrations = recorder.applied_migrations()
  File "/usr/local/lib/python3.10/site-packages/django/db/migrations/recorder.py", line 81, in applied_migrations
    if self.has_table():
  File "/usr/local/lib/python3.10/site-packages/django/db/migrations/recorder.py", line 57, in has_table
    with self.connection.cursor() as cursor:
  File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 323, in cursor
    return self._cursor()
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 299, in _cursor
    self.ensure_connection()
  File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 281, in ensure_connection
    with self.wrap_database_errors:
  File "/usr/local/lib/python3.10/site-packages/django/db/utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 282, in ensure_connection
    self.connect()
  File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 263, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 215, in get_new_connection
    connection = Database.connect(**conn_params)
  File "/usr/local/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
django.db.utils.OperationalError: FATAL:  password authentication failed for user "root"

root@27df2d50736c:/app# python manage.py runserver 0.0.0.0:8000
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).
Exception in thread django-main-thread:
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 282, in ensure_connection
    self.connect()
  File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 263, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 215, in get_new_connection
    connection = Database.connect(**conn_params)
  File "/usr/local/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  password authentication failed for user "root"


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
    self.run()
  File "/usr/local/lib/python3.10/threading.py", line 953, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/utils/autoreload.py", line 64, in wrapper
    fn(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/core/management/commands/runserver.py", line 137, in inner_run
    self.check_migrations()
  File "/usr/local/lib/python3.10/site-packages/django/core/management/base.py", line 564, in check_migrations
    executor = MigrationExecutor(connections[DEFAULT_DB_ALIAS])
  File "/usr/local/lib/python3.10/site-packages/django/db/migrations/executor.py", line 18, in __init__
    self.loader = MigrationLoader(self.connection)
  File "/usr/local/lib/python3.10/site-packages/django/db/migrations/loader.py", line 58, in __init__
    self.build_graph()
  File "/usr/local/lib/python3.10/site-packages/django/db/migrations/loader.py", line 235, in build_graph
    self.applied_migrations = recorder.applied_migrations()
  File "/usr/local/lib/python3.10/site-packages/django/db/migrations/recorder.py", line 81, in applied_migrations
    if self.has_table():
  File "/usr/local/lib/python3.10/site-packages/django/db/migrations/recorder.py", line 57, in has_table
    with self.connection.cursor() as cursor:
  File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 323, in cursor
    return self._cursor()
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 299, in _cursor
    self.ensure_connection()
  File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 281, in ensure_connection
    with self.wrap_database_errors:
  File "/usr/local/lib/python3.10/site-packages/django/db/utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 282, in ensure_connection
    self.connect()
  File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/base/base.py", line 263, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/local/lib/python3.10/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/site-packages/django/db/backends/postgresql/base.py", line 215, in get_new_connection
    connection = Database.connect(**conn_params)
  File "/usr/local/lib/python3.10/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
django.db.utils.OperationalError: FATAL:  password authentication failed for user "root"

/app/mysite/settings.py changed, reloading.
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).

You have 18 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.
Run 'python manage.py migrate' to apply them.
October 10, 2022 - 02:35:16
Django version 4.1.2, using settings 'mysite.settings'
Starting development server at http://0.0.0.0:8000/
Quit the server with CONTROL-C.
python manage.py migrate
/app/mysite/settings.py changed, reloading.
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).

You have 18 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.
Run 'python manage.py migrate' to apply them.
October 10, 2022 - 02:35:30
Django version 4.1.2, using settings 'mysite.settings'
Starting development server at http://0.0.0.0:8000/
Quit the server with CONTROL-C.
